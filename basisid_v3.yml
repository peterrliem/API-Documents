swagger: '2.0'
info:
  version: 3.0.0
  description: |
    ## BASIS ID API integration

    **The order of terminal operations with API:**


    1) Call method: /base-check


    In this method, you can set the following basic user parameters:


    2) * OPTIONAL - Call for One-Time-Password /send-sms


    3) * OPTIONAL - SMS code received from the user is sent to /check-sms-code


    4) * OPTIONAL -  Photo of the user document is sent to /send-document


    (2 requests in the case of a two-sided document - ID card)


    5) * OPTIONAL -  Send user's video of himself or herslef to /send-video  or 
        user's photo of himself or herself to /send-image

    6) * OPTIONAL - Send user's bank statement to /send-statement

    7) Status callback

    **Final status callback**


    A callback is performed if a user’s status is changed to ‘approved’ or ‘declined’
    In the case of post moderation, a callback is only sent when your company performs a second check on their client.
    It is possible to set up callback after the automatic check.

    To enable callback, please install Callback Url in the CRM settings.

    An example of a callback request:
    ```
    {"user_id":2027,
     "user_hash":"27c5728a-7130-408d-b0a1-d55ed8ae7b2f",
     "status":11,
     "signature":"7ca05937a0e5c42147be2aa23ffad87e80bd866e1ff7950ec6841d4d87d844fe",
     "autocheck_bad_reasons":""}
    ```

    * user_id - user’s ID
    * user_hash - user’s unique hash
    * status - user’s status (10 - user is confirmed; 11 - user is declined)
    * autocheck_bad_reasons - the reason for the request to be automatically declined
    * signature - signature of the request

    Your request is signed as BASIS_API_SECRET2 (can be found in CRM settings)
    In order to create a signature, you will need to get sha256 hash from the concatenation of the following line:

    ```
    BASIS_API_SECRET2+user_id+user_hash+status+autocheck_bad_reasons
    ```

    Java signature example:
    ```
    String sign256hex = org.apache.commons.codec.digest.DigestUtils.sha256Hex(BASIS_API_SECRET2 + user_id + user_hash + status + autocheck_bad_reasons);
    if (sign256hex.equals(signature)) {
        // Signed ...
    }
    ```

    PHP signature example:
    ```
    $signature = hash('sha256', BASIS_API_SECRET2 . $inp['user_id'] . $inp['user_hash'] . $inp['status'] . $inp['autocheck_bad_reasons']);
    if ($signature == $inp['signature']) {

    }
    ```

    In response to the callback, you have to send the status “200OK” with any text (e.g. "OK").

   If a response has not been received or it does not contain the status, “200OK”, the system will stop sending a request for 3 minutes.
   After 3 minutes, it will resend the request. This process will repeat itself until a response has been received.


    <br />
    <br />

    **The reasons for the request to be automatically declined**

    You can have one reason or many common separated reasons in "autocheck_bad_reasons" field:

    * pep - politically exposed person
    * law enforcement
    * regulatory enforcement
    * other bodies
    * sanctions  - government etc sanctions

    * black_list - A person with the same name is mentioned in sanction lists.
    * card - Credit card is not valid (problem with cc check)
    * video - The passport/ID picture and face on the video are not similar. No match in facial recognition.
    * mrz - The first name/surname/middle name/date of birth do not match with passport's machine readable zone (MRZ). Or  document is not valid.

    <br />
    <br />


    **"Requested" statatus callback**

    Callback is sent if a user’s status is changed to ‘requested’.

    By default, this functionality is disabled.
    BASIS ID sends requests to the user directly to the email.
    Contact BASIS ID support (support@basisid.com) if you need this functionality.

    An example of callback request:

    ```
    {
      "callback_type": "request",
      "user_id":2027,
      "user_hash":"27c5728a-7130-408d-b0a1-d55ed8ae7b2f",
      "status":3,
      "signature":"7ca05937a0e5c42147be2aa23ffad87e80bd866e1ff7950ec6841d4d87d844fe",
      "reason": "0,5",
      "request": "1,2",
      "message": "Request message",
    }
    ```

    * user_id - user’s ID
    * user_hash - user’s unique hash
    * status - user’s status (3 - user was requested)
    * autocheck_bad_reasons - the reason for the request to be automatically declined
    * signature - signature of the request
    * reason - list of request reasons separated with ','.

    0 - No required data
    1 - Data has mistakes
    2 - Email not confirmed
    3 - Bad photo quality
    4 - No required photos
    5 - No MRZ zone on document photos
    6 - Bad video quality
    7 - Bad bank statement photo
    8 - Bank statement is old
    9 - Social accounts are not relevant
    10 - Bad quality of utility bill photo
    11 - Utility bill is old
    12 - Bad quality of proof of income photo
    13 - Proof of income is old

    * request - list of requested fields separated with ','.

    0 - Name
    1 - Gender
    2 - Birthday
    3 - Country of Nationality
    4 - Full Address
    5 - Phone
    6 - E-mail
    7 - Passport/ID card photo
    8 - Client photo
    9 - Video
    10 - Bank statement
    11 - Social networks accounts
    12 - Utility bill
    13 - Proof of income

    * message - request message

    Your request is signed as BASIS_API_SECRET2 (can be found in CRM settings)
    To create a signature you need to get sha256 hash from concatenation of the following line:

    ```
    BASIS_API_SECRET2+user_id+user_hash+status+reason+request+message
    ```
    <br />
    <br />

  title: BASIS ID Verification API
tags:
  - name: send data
  - name: receive data
consumes:
  - application/json
produces:
  - application/json
host: api.basisid.com
basePath: /
paths:
  /auth/base-check:
    post:
      tags:
        - send data
      summary: Registration start - Sending basic data
      description: >-
        First step of registering a new user: Sending basic data about the user to the server.

      operationId: base-check
      parameters:
        - name: key
          in: query
          required: true
          type: string
          description: BASIS ID API KEY (from panel)
          x-example: prod-pHmeBukoXXXXXpXFjOhvjmrXxwwbtZOn
        - name: first_name
          in: query
          required: true
          type: string
          description: User first name
          x-example: John
        - name: last_name
          in: query
          required: true
          type: string
          description: User last name
          x-example: Doe
        - name: middle_name
          in: query
          required: false
          type: string
          description: User middle name
          x-example: Young
        - name: email
          in: query
          required: true
          type: string
          description: User e-mail address
          x-example: test123@testmail.com
        - name: phone
          in: query
          required: true
          type: string
          description: >-
            The phone number of the user in the following format [country
            code]-[phone number]
          x-example: 7-9181234567
        - name: phone2
          in: query
          required: false
          type: string
          description: >-
            Additional phone number of the user in the following format [country
            code]-[phone number]
          x-example: 7-9181234567
        - name: gender
          in: query
          required: false
          type: number
          description: 'Gender, 0 - male, 1 - female, 2 - other'
          x-example: 0
        - name: birthday_day
          in: query
          required: true
          type: string
          description: 'User birthday day (valid day number, 1-31)'
        - name: birthday_month
          in: query
          required: true
          type: string
          description: User birthday month number (1 - January .. 12 - December)
        - name: birthday_year
          in: query
          required: true
          type: string
          description: 'User birthday year, valid year number, from 1917 to current year'
        - name: country_nationality
          in: query
          required: true
          type: string
          description: 'Country of citizenship, iso2 code'
        - name: country_residence
          in: query
          required: false
          type: string
          description: 'Country of residence, iso2 code'
        - name: city
          in: query
          required: false
          type: string
          description: City
        - name: address
          in: query
          required: false
          type: string
          description: Address
        - name: address2
          in: query
          required: false
          type: string
          description: Aditional address
        - name: zip
          in: query
          required: false
          type: string
          description: Index
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
              - user_id
              - user_hash
            type: object
            properties:
              status:
                type: string
                description: Request status
                example: ok
              user_hash:
                type: string
                description: Unique user hash
                example: 9146288d95b60ffa6d043ed7c9b8cf07bd1edaf7
              user_id:
                type: number
                description: Unique user ID
              api_access_token:
                type: string
                description: >-
                  Token to retrieve user data through a server-side API Lifetime
                  of the token is 60 minutes
                example: aat-gewyTfImeRqsKXhgbdOYAfGNVigmaCfcpaANTJpu
              api_refresh_token:
                type: string
                description: Token for updating user data through a server-side API
                example: art-tqcJQSzbPHuFhHcIjVoOlMKuyntJoZJKGIzgNDgb
              errors:
                type: array
                description: >-
                  Error values (for status: bad)

                    "error:key" -  API_KEY is not specified

                    "empty:first_name" -  first name is not specified

                    "empty:last_name" - last name is not specified

                    "empty:phone" - phone number is not specified

                    "empty:email" - e-mail is not specified or wrong

                    "empty:birthday_day" - date of birth error

                    "empty:birthday_month" - month of birth error

                    "empty:birthday_year" - year of birth error

                    "error:country_nationality" - wrong country of nationality

                    "user:exists" -  user with this e-mail/phone number already exists"
          examples:
            application/json:
              status: ok
              userHash: c3732a00d5e297ba5a83504dfe1f2cdb310d0f80
              checkId: 890
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
                -H "Content-Type: application/json" \
                -X POST -d '{"key": "API_KEY", "first_name": "John", "last_name": "Doe", "middle_name": "", "email": "johndoe777@testdemo.com", "phone": "+79998885566", "phone2": "", "gender": 0, "birthday_day": "01", "birthday_month": "07", "birthday_year": "1983", "country_nationality": "SG", "country_residence": "SG", "city": "Singapore", "address": "Last Street, 19-99", "zip": "54321"}' \
                https://api.basisid.com/auth/base-check
  /auth/send-sms:
    post:
      tags:
        - send data
      summary: OTP sms request (optional)
      description: Sending an SMS to the user to confirm his/her phone number
      operationId: send-sms
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (user_id, received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: Unique registration ID (user_id, received in the /send form step)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - phone
              - status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status. Values: ok, bad
                example: ok
              phone:
                type: string
                description: >-
                  The phone number of the user in the following format [country
                  code]-[phone number]
                example: 1-2345678900
              errors:
                type: array
                description: >-
                  Error values (for status: bad)

                  empty:user_hash - no user_hash

                  empty:check_id - no check_id
          examples:
            application/json:
              status: ok
              phone: 1-2345678900
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server
            Please contact the support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
                -H "Content-Type: application/json" \
                -X POST -d '{"user_hash": "c3732a00d5e297ba5a83504dfe1f2cdb310d0f80", "check_id": 890}' \
                https://api.basisid.com/auth/send-sms
  /auth/check-sms-code:
    post:
      tags:
        - send data
      summary: Checking the OTP (SMS) code  (optional)
      description: OTP (SMS) code checking
      operationId: check-sms-code
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: code
          in: query
          required: true
          type: string
          description: Verification code (OTP code) received in SMS
          x-example: '12345'
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - phone
              - status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status. Values: ok, bad
                example: ok
              phone:
                type: string
                description: >-
                  The phone number of the user in the following format [country
                  code]-[phone number]
                example: 1-2345678900
              errors:
                type: array
                description: >-
                  Error values (for status: bad)
                items:
                  description: >-
                    empty:code - wrong or empty OTP code from SMS
                    empty:user_hash - no user_hash
                    empty:check_id - no check_id
          examples:
            application/json:
              status: ok
              phone: 1-2345678900
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server
            Please contact the support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
                -H "Content-Type: application/json" \
                -X POST -d '{"user_hash": "c3732a00d5e297ba5a83504dfe1f2cdb310d0f80", "check_id": 890, "phone": "1-2345678900", "code": "5555"}' \
                https://api.basisid.com/auth/check-sms-code
  /auth/send-document:
    post:
      tags:
        - send data
      summary: Uploading documents to the server  (optional)
      description: Uploading user's passport or ID card (2 side photo) on the server
      operationId: send-document
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff)
        - name: step
          in: query
          required: false
          type: string
          description: >-
            Document side numeration. "1" by default. For second side of ID card
            specify "2".
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "step=1" \
              -F "file=@/path/to/img.jpg" \
            https://api.basisid.com/auth/send-document
  /auth/send-video:
    post:
      tags:
        - send data
      summary: Uploading a video to server  (optional)
      description: Upload user video to server
      operationId: send-video
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Video recording file (mp4/avi/fla/mov/wmv/m3u8/ts/3gp/mpeg)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/mov.MOV" \
            https://api.basisid.com/auth/send-video
  /auth/send-image:
    post:
      tags:
        - send data
      summary: Upload photo to server. Instead of video.  (optional)
      description: Upload user photo to server
      operationId: send-image
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/image.jpg" \
            https://api.basisid.com/auth/send-image
  /auth/send-statement:
    post:
      tags:
        - send data
      summary: Upload bank statement to server
      description: Upload bank statement on the server
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff/pdf)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com - support@basisid.com
  /auth/send-pay-slip:
    post:
      tags:
        - send data
      summary: Upload utility bill to server
      description: Upload utility bill / latest pay slip document photo to the server
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff/pdf)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/image.jpg" \
            https://api.basisid.com/auth/send-pay-slip
  /auth/send-proof-income:
    post:
      tags:
        - send data
      summary: Upload proof of income to the server
      description: Upload proof of income document photo to the server
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff/pdf)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/image.jpg" \
            https://api.basisid.com/auth/send-proof-income
  /users/info/{id}/{api_key}/{signature}:
    get:
      tags:
        - receive data
      summary: Get user profile information
      description: >-
        Returns user profile information for defined company.
      operationId: get-user-info
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: user_hash or email
          x-example: b84caa8cb9097361b89509c7395be1e7f7743442 | email@example.com
        - name: api_key
          in: path
          required: true
          type: string
          description: Company ApiKey
          x-example: prod-d67b6cd3-7255-4203-b351-3bd26233dcc8
        - name: signature
          in: path
          required: true
          type: string
          description: Request sha256 signature. Calculated as sha256(id+BASIS_API_SECRET2)
          x-example: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
              - profile
              - user_status
              - basis_status
              - autocheck_status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status
                  "ok" - No errors found.

                  Error statuses:
                  "company_not_found" -  company not found.
                  "wrong_signature" -  wrong signature
                  "user_not_found" - user with defined user hash or email not found
                example: ok
              user_status:
                type: number
                description: User status
                example: 10
              basis_status:
                type: number
                description: BASIS ID status
                example: 11
              autocheck_status:
                type: number
                description: User profile auto verification status
                example: 0
              profile:
                type: object
                properties:
                  id:
                    type: string
                    description: user uniq id
                  user_hash:
                    type: string
                    description: user hash
                  first_name:
                    type: string
                    description: first name
                  last_name:
                    type: string
                    description: last name
                  middle_name:
                    type: string
                    description: middle name
                  email:
                    type: string
                    description: email address
                  email_confirmed:
                    type: bool
                    description: email address confirmed flag
                  phone:
                    type: string
                    description: phone number
                  phone2:
                    type: string
                    description: additional phone number
                  gender:
                    type: string
                    description: gender
                  address:
                    type: string
                    description: address line1
                  address2:
                    type: string
                    description: address line2
                  autocheck_bad_reasons:
                    type: string
                    description: the reason for the request to be automatically declined
                  birthday:
                    type: string
                    description: date of birth, YYYY-MM-DD
                  city:
                    type: string
                    description: city
                  country:
                    type: string
                    description: country code, ISO2
                  country_residence:
                    type: string
                    description: residence country code, ISO2
                  zip:
                    type: string
                    description: post code

          examples:
            application/json:
              status: "ok"
              profile:
                id: "9142"
                user_hash: "222fc57c643d5dd86bb473ee729a52c95476fea3"
                address: ""
                address2: ""
                autocheck_bad_reasons: ""
                birthday: "1990-07-14"
                city: ""
                country: "ee"
                country_residence: ""
                email: "john@smith.com"
                email_confirmed: "true"
                first_name: "John"
                last_name: "Smith"
                gender: "male"
                middle_name: ""
                phone: "110011212"
                phone2: ""
                zip: ""
              user_status: 11
              basis_status: 10
              autocheck_status: 0
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please contact the support team - support@basisid.com - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl https://api.basisid.com/users/info/email@example.com/d67b6cd3-7255-4203-b351-3bd26233dcc8/a956bd8dceff54384a065dc6ec183ddf52302e4613e634769cfeebfdc87c1677
